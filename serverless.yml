service: hachipochi-api
frameworkVersion: '2'

plugins:
  - serverless-domain-manager

provider:
  name: aws
  runtime: python3.9
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  environment:
    ENV: ${opt:stage, self:custom.defaultStage}
  iam:
    role:
      statements:
      - Effect: "Allow"
        Action:
          - "dynamodb:*"
          - "logs:*"
        Resource: "*"

custom:
  defaultStage: dev
  endpoint:
    dev: "dev-api.hachipochi.net"
    prod: "prod-api.hachipochi.net"
  customDomain:
    domainName: ${self:custom.endpoint.${self:provider.stage}}
    certificateArn: "arn:aws:acm:us-east-1:724412619408:certificate/7188221c-26b0-456c-a521-886b312407cf"
    basePath: ''
    endpointType: "edge"
    stage: ${self:provider.stage}
    createRoute53Record: true

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.py'
#    - '!exclude-me-dir/**'
#    - include-me.py
#    - include-me-dir/**

functions:
  getGenre:
    handler: index_genre.scan
    name: ${self:provider.stage}_scan_genre
    events:
      - http:
          path: /genre
          method: get
  getImage:
    handler: get_image.lambda_handler
    name: ${self:provider.stage}_get_image
    events:
      - http:
          path: /image
          method: get

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
