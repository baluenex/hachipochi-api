AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: python3.6
    Timeout: 10
    MemorySize: 128
Resources:
  GetImageGenreFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://hachipochi-lambda-codes/8c4c5cf6a4a997b1fa3f5fe1d5744207
      FunctionName: GetImageGenreFunction
      Handler: get_image_genre.lambda_handler
      Policies: AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /genre
            Method: get
  GetAnimalImgFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://hachipochi-lambda-codes/2a87151c317c9ebe90a525386fe6581c
      FunctionName: GetAnimalImgFunction
      Handler: get_animal_img.lambda_handler
      Policies: AmazonDynamoDBFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /img
            Method: get
  PostAnimalImgFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://hachipochi-lambda-codes/2a87151c317c9ebe90a525386fe6581c
      FunctionName: PostAnimalImgFunction
      Handler: send_animal_img.lambda_handler
      Policies:
      - AmazonS3FullAccess
      - AmazonSQSFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /img
            Method: post
  RegisterAnimalImgFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://hachipochi-lambda-codes/2a87151c317c9ebe90a525386fe6581c
      FunctionName: RegisterAnimalImgFunction
      Handler: register_animal_img.lambda_handler
      Policies:
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Events:
        ImgUpload:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - HachipochiPostImgQueue
              - Arn
            BatchSize: 3
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - HachipochiDeadLetterQueue
          - Arn
  PostNewGenreFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://hachipochi-lambda-codes/8c4c5cf6a4a997b1fa3f5fe1d5744207
      FunctionName: PostNewGenreFunction
      Handler: send_new_genre.lambda_handler
      Policies:
      - AmazonSQSFullAccess
      Events:
        Api:
          Type: Api
          Properties:
            Path: /genre
            Method: post
  RegisterNewGenreFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://hachipochi-lambda-codes/8c4c5cf6a4a997b1fa3f5fe1d5744207
      FunctionName: RegisterNewGenreFunction
      Handler: register_new_genre.lambda_handler
      Policies:
      - AmazonS3FullAccess
      - AmazonDynamoDBFullAccess
      Events:
        GetNewGenre:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - HachipochiPostGenreQueue
              - Arn
            BatchSize: 3
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt:
          - HachipochiDeadLetterQueue
          - Arn
  HachipochiPostImgQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: HachipochiPostImgQueue
  HachipochiPostGenreQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: HachipochiPostGenreQueue
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - HachipochiDeadLetterQueue
          - Arn
        maxReceiveCount: 2
  HachipochiDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: HachipochiDeadLetterQueue
  GetImageGenrePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: GetImageGenreFunction
      Principal: apigateway.amazonaws.com
  GetAnimalImgPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: GetAnimalImgFunction
      Principal: apigateway.amazonaws.com
  PostAnimalImgPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: PostAnimalImgFunction
      Principal: apigateway.amazonaws.com
  RegistAnimalImgPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: RegisterAnimalImgFunction
      Principal: apigateway.amazonaws.com
  PostNewGenrePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: PostNewGenreFunction
      Principal: apigateway.amazonaws.com
  RegisterNewGenrePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: RegisterNewGenreFunction
      Principal: apigateway.amazonaws.com
